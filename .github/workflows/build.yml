name: Build, Test and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '10.11.0' # ci.yml과 동일한 버전 사용 또는 최신 버전 명시

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # 프로젝트에 맞는 Node.js 버전으로 수정해주세요.
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        env:
          # 런타임에는 Accelerate URL 사용 (prisma://)
          DATABASE_URL: ${{ secrets.PRISMA_ACCELERATE_URL || secrets.DATABASE_URL || 'prisma://dummy.prisma-data.net/?api_key=dummy' }}
        run: pnpm prisma generate --accelerate

      # Vercel Remote Cache를 사용하는 경우 주석 해제 및 secrets 설정 필요
      # - name: Vercel Remote Cache Setup
      #   run: pnpx turbo login
      #   env:
      #     TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      #     TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      #   if: env.TURBO_TOKEN && env.TURBO_TEAM

      - name: Build with Turborepo
        run: pnpm turbo run build --cache-dir=.turbo # --cache 플래그 대신 --cache-dir을 명시적으로 사용하거나, turbo.json 설정을 따릅니다.

      - name: Prisma Migrate Deploy
        env:
          # 마이그레이션에는 직접 연결 URL 사용 (postgresql://)
          DATABASE_URL: ${{ secrets.POSTGRES_DIRECT_URL || secrets.DATABASE_URL_MIGRATE || secrets.NEON_HTTP_URL || 'postgresql://dummy:dummy@localhost:5432/dummy' }}
        run: |
          # DATABASE_URL이 postgresql://로 시작하는지 확인
          if [[ "$DATABASE_URL" == postgresql://* || "$DATABASE_URL" == postgres://* ]]; then
            echo "마이그레이션을 위한 올바른 DATABASE_URL 형식이 감지되었습니다."
            # 실제 환경에서 마이그레이션 실행
            if [[ "$DATABASE_URL" != *"dummy"* ]]; then
              echo "마이그레이션 실행 중..."
              pnpm prisma migrate deploy || echo "마이그레이션 실행 중 오류가 발생했지만 계속 진행합니다."
            else
              echo "더미 URL이 감지되어 마이그레이션을 건너뜁니다."
            fi
          else
            echo "경고: DATABASE_URL이 postgresql:// 또는 postgres://로 시작하지 않습니다. 마이그레이션을 건너뜁니다."
          fi

      - name: Lint and Type Check
        run: pnpm lint && pnpm type-check
